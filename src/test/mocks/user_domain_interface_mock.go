// Code generated by MockGen. DO NOT EDIT.
// Source: src/model/user_domain_interface.go
//
// Generated by this command:
//
//	mockgen -source=src/model/user_domain_interface.go -destination=src/test/mocks/user_domain_interface_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUserDomainInterface is a mock of UserDomainInterface interface.
type MockUserDomainInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserDomainInterfaceMockRecorder
}

// MockUserDomainInterfaceMockRecorder is the mock recorder for MockUserDomainInterface.
type MockUserDomainInterfaceMockRecorder struct {
	mock *MockUserDomainInterface
}

// NewMockUserDomainInterface creates a new mock instance.
func NewMockUserDomainInterface(ctrl *gomock.Controller) *MockUserDomainInterface {
	mock := &MockUserDomainInterface{ctrl: ctrl}
	mock.recorder = &MockUserDomainInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserDomainInterface) EXPECT() *MockUserDomainInterfaceMockRecorder {
	return m.recorder
}

// GetAge mocks base method.
func (m *MockUserDomainInterface) GetAge() int8 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAge")
	ret0, _ := ret[0].(int8)
	return ret0
}

// GetAge indicates an expected call of GetAge.
func (mr *MockUserDomainInterfaceMockRecorder) GetAge() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAge", reflect.TypeOf((*MockUserDomainInterface)(nil).GetAge))
}

// GetEmail mocks base method.
func (m *MockUserDomainInterface) GetEmail() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmail")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetEmail indicates an expected call of GetEmail.
func (mr *MockUserDomainInterfaceMockRecorder) GetEmail() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmail", reflect.TypeOf((*MockUserDomainInterface)(nil).GetEmail))
}

// GetFirstName mocks base method.
func (m *MockUserDomainInterface) GetFirstName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFirstName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFirstName indicates an expected call of GetFirstName.
func (mr *MockUserDomainInterfaceMockRecorder) GetFirstName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFirstName", reflect.TypeOf((*MockUserDomainInterface)(nil).GetFirstName))
}

// GetId mocks base method.
func (m *MockUserDomainInterface) GetId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetId indicates an expected call of GetId.
func (mr *MockUserDomainInterfaceMockRecorder) GetId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetId", reflect.TypeOf((*MockUserDomainInterface)(nil).GetId))
}

// GetLastName mocks base method.
func (m *MockUserDomainInterface) GetLastName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLastName indicates an expected call of GetLastName.
func (mr *MockUserDomainInterfaceMockRecorder) GetLastName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastName", reflect.TypeOf((*MockUserDomainInterface)(nil).GetLastName))
}

// SetId mocks base method.
func (m *MockUserDomainInterface) SetId(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetId", arg0)
}

// SetId indicates an expected call of SetId.
func (mr *MockUserDomainInterfaceMockRecorder) SetId(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetId", reflect.TypeOf((*MockUserDomainInterface)(nil).SetId), arg0)
}
